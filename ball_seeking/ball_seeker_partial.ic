#define POWER 60   /*Configuration power drive motor */
#define base -19
#use "encoder_lib.ic"
#use "read_sensor_function.ic"

float dis_table[118] = { /*distance value*//*ADC value*/
32.0,/*19*/30.1,/*20*/29.5,/*21*/28.6,/*22*/27.5,/*23*/
26.1,/*24*/25.3,/*25*/24.5,/*26*/23.7,/*27*/23.2,/*28*/
22.3,/*29*/22.0,/*30*/21.1,/*31*/20.5,/*32*/20.0,/*33*/
19.3,/*34*/19.1,/*35*/18.4,/*36*/17.9,/*37*/17.5,/*38*/
17.1,/*39*/16.5,/*40*/16.2,/*41*/15.8,/*42*/15.6,/*43*/
15.5,/*44*/15.3,/*45*/14.8,/*46*/14.2,/*47*/13.8,/*48*/
13.6,/*49*/13.3,/*50*/13.1,/*51*/12.8,/*52*/12.6,/*53*/
12.4,/*54*/12.2,/*55*/12.0,/*56*/11.8,/*57*/11.7,/*58*/
11.6,/*59*/11.6,/*60*/11.5,/*61*/11.4,/*62*/11.3,/*63*/
10.85,/*64*/10.6,/*65*/10.3,/*66*/10.2,/*67*/10.0,/*68*/
9.8,/*69*/9.7,/*70*/9.5,/*71*/9.3,/*72*/9.2,/*73*/
9.0,/*74*/8.9,/*75*/8.8,/*76*/8.6,/*77*/8.4,/*78*/
8.3,/*79*/8.2,/*80*/8.0,/*81*/7.85,/*82*/7.7,/*83*/
7.6,/*84*/7.5,/*85*/7.3,/*86*/7.2,/*87*/7.15,/*88*/
7.1,/*89*/7.0,/*90*/6.9,/*91*/6.8,/*92*/6.7,/*93*/
6.6,/*94*/6.5,/*95*/6.4,/*96*/6.35,/*97*/6.3,/*98*/
6.2,/*99*/6.15,/*100*/6.1,/*101*/6.0,/*102*/5.9,/*103*/
5.85,/*104*/5.8,/*105*/5.7,/*106*/5.65,/*107*/5.6,/*108*/
5.55,/*109*/5.45,/*110*/5.4,/*111*/5.4,/*112*/5.3,/*113*/
5.2,/*114*/5.1,/*115*/5.0,/*116*/5.0,/*117*/4.9,/*118*/
4.9,/*119*/4.8,/*120*/4.8,/*121*/4.7,/*122*/4.7,/*123*/
4.6,/*124*/4.6,/*125*/4.5,/*126*/4.5,/*127*/4.4,/*128*/
4.4,/*129*/4.3,/*130*/4.3,/*131*/4.2,/*132*/4.2,/*133*/
4.1,/*134*/4.1,/*135*/4.0 /*136*/
};

void main(void)
{
 int sensor_status = 0; // Integer value for sensor status
 int i;
 i = 0;
 encoder_init(); // Initial encoder

 printf("Press Start!\n"); // Show begining message
 while (!start_button())
  ; // Wait START button pressed to run

 while (!stop_button()) // Continue until STOP button pressed
 {
  while (1) // Infinite loop
  {
   value = read_distance(); // Read analog value from sensor
   if (value == 1) // Distance interval 10-80 cm

   {
    printf("I see a ball in %f cm.\n", dis_table[an + base]);
    // Display distance value
    move_toward();
   } else if (value == 2)
   {
    printf("Out of Sight... \n");
    // Show mesage out of Range
    keep_searching();
   } else
   {
    printf("I have a Ball.\n");
    beep();
    kickit();
   }
   printf("Stop..\n"); // Show finish message
   ao(); // Off all motor for ending program
   beep(); // Sound beep signal for ending program
  }
 }
}

void move_toward(void)
{
    motor(0,POWER);
    motor(1,POWER);
    sleep(0.1);
}

void keep_searching(void)
{
    int i;
    i=0;
    count_step(SPIN_LEFT,3,RIGHT);
    sensor_status = read_sensors();
    if(sensor_status != 0)
      i++;
    if(i>=14)
    {
     i=0;
     motor(0,POWER);
     motor(1,POWER);
     sleep(0.5);
    }
}

void kickit(void)
{
    motor(1,POWER+30);
    motor(0,POWER+30);
    sleep(0.1);
    motor(1,-POWER);
    motor(0,-POWER);
    sleep(0.15);
}
